<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFXB.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACusAAArrAYKLDVoAAAS5SURBVEhLlVV5UNVVFH5YuNHQOC1/ZaEzmabjSGE0jBKR
        aCwSWpDFhAM2LJWosS8RaBgiLxRiKdmJ5bEoZCoBwhN4LIIPRUHBYZMlVn1PRlbx694rv+t7PHTqj+83
        v/vdc79z77nnnCsCpM9Ec38dokpb4ZzWg10xA7CJGcS+lF6I/27Dle56PHokxULrBCxI0kVn5E14/+hd
        rPuhBR45Efij9ktcvPkhym+ZIPvy5/DLD4X+YTk2BiuRVt2M2dmFHWkQQ/erYB09SMRrUNpiSnZIaDwd
        te2GMPulGB+Ej6JrpIZw6npqg/ahGqwNVOLIXwF4OLtIQ+xpoJuILXeFno8CjXfqCbeAg5GxKqwj4imy
        vRoC/xXnmiyYE9WTsA/FZ3EDCCoI5saKcV28cmiQLOiEvHsT5wVMTC+BSXg5XvfuZqEU+DipC7YeGyUR
        eHwnhJWKipuvsgubefgcN7w/8QKWuE5C22WGzU3NaPM5Cs+ccDZHceH6Ds7TcO2ILEKqrIWM5xxsE4+g
        sHEnNxLgnXuMi/xY+OR0sttG3PmmEDkmpxerrbvcaYD1QUqWwqI7o9V4gxwzvcQYu4O8YBviAesAH5h+
        Hwzv3x1YNlGhZW7jJFT6eDC1jKRuM+N0v1MiMN0Zq+1jOIz2hyKt2BgGR+qJowaI0mua8XXKKYRl2mDp
        x1mIP2uG3wgi8ywhKTdC+9AqvHxwmAnSULmkxbN/imSSEMlFJtCxyED34Evo6H8Vwam20DLNg110AsIv
        3IbIN7+TVOp+JrjCOlXtqAJyGz7logKckhPZXDbZhOo6+W09iEzz4Zflhb1JfRDRspdctkNs4XZom0mw
        P8oJ+4674YufDqKscT1f6JCYwsXXBt7E2KQO4wtlBtD6KBeb3cLw3jc/Y7l5Bj4J9EFF21ZYnByCyDG5
        j5S+HQuL4MA92gnOYhfIbrzFHdjFS7iDVb4dUDx4kTtYbp6JvEuGKJBtRmDSHjxvloOo81/BkjrwP92J
        yJIDOEFCpGuVzgVVkVTlyMUF2J96bJtdph6iWZKm9BTGAUmgmxdl1t0gsUrG0YxdWLw9mxsKaOrZwLKF
        ipocL1e75MRKR3bJdF3CeVP2T8O7iITMIjwT4uI2iPoVMrzm1QdxrjXWOESpiY9N6ODtuZRc4X4XHcN6
        jFsT0Mo46jjijD3MfQNg5e8HCz9/WBLQcG0Mvsr6ElGSimisJPW2auIUTikJfLdxpJkJvLTVGItdphj/
        7pEGjSqvaNuCdw4ryP9cJVe0ydlOVSuS9iJtl2kmsk1cQmKrxecoDmRHcucFjdacp3bGxy4hp/4GGas0
        O5qzhyRibkh7kWFoLbaEVaB7dCXnBYxPLYVV1J/MpuymCefDizxJLxrmLx1hHztQTlRCP0SBk6Xu3Pj/
        IqtuD970V+Ifcq+CLvsI6LsnI81LAQ9JhEYDexbo43T0nB8Tbx2oJdwTTf4jQDleib2JfdgQdJ21CNUW
        Ph803rRV0zDRZ3ZQ+WTnAtQGqpDeksP8xBBWevewbPr14rfIu7Ibp+U25FFxhVt6LFb7tcOYvMVnr13j
        MZ8PDWI+eu9Vg3Zcn7wu0uB6WXV65nSRImshdaH5yKtDKvoXCao889Mh178AAAAASUVORK5CYII=
</value>
  </data>
</root>